{
  "version": 3,
  "sources": ["../src/extension.ts"],
  "sourcesContent": ["/**\n * Food Facility Permits VS Code Extension\n * \n * Architecture:\n * 1. Backend (FastAPI):\n *    - Runs as a separate process on port 8000\n *    - Uses in-memory SQLite database initialized from CSV\n *    - Endpoints:\n *      - /permits - Get all permits or filter by applicant/status\n *      - /permits/address - Search by address (partial matches)\n *      - /permits/nearby - Find permits near coordinates\n * \n * 2. Frontend (React):\n *    - Runs in VS Code webview\n *    - Communicates with backend via HTTP\n *    - Sends messages to extension which proxies requests to backend\n */\n\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as cp from 'child_process';\n\nlet backendProcess: cp.ChildProcess | undefined;\nlet webviewPanel: vscode.WebviewPanel | undefined;\n\nexport function activate(context: vscode.ExtensionContext) {\n    console.log('Food Facility Permits extension is now active!');\n\n    // Register the command to open the search UI\n    let disposable = vscode.commands.registerCommand('permits.openSearchUI', async () => {\n        console.log('Opening Food Permits Search UI...');\n\n        // Use absolute path to backend\n        const backendPath = '/Users/arckex/source/radai/backend';\n        console.log('Using backend path:', backendPath);\n\n        if (!fs.existsSync(backendPath)) {\n            vscode.window.showErrorMessage(`Backend directory not found at ${backendPath}`);\n            return;\n        }\n\n        // Start the backend if it's not running\n        if (!backendProcess) {\n            try {\n                await startBackend(backendPath);\n            } catch (error) {\n                vscode.window.showErrorMessage(`Failed to start backend: ${error instanceof Error ? error.message : 'Unknown error'}`);\n                return;\n            }\n        }\n\n        if (webviewPanel) {\n            webviewPanel.reveal(vscode.ViewColumn.One);\n            return;\n        }\n\n        // Create and show panel\n        webviewPanel = vscode.window.createWebviewPanel(\n            'permitsSearch',\n            'Food Facility Permits',\n            vscode.ViewColumn.One,\n            {\n                enableScripts: true,\n                retainContextWhenHidden: true,\n                localResourceRoots: [\n                    vscode.Uri.file(path.join(context.extensionPath, 'webview', 'dist'))\n                ],\n                enableFindWidget: true,\n                enableCommandUris: true\n            }\n        );\n\n        // Set webview options\n        webviewPanel.webview.options = {\n            enableScripts: true,\n            localResourceRoots: [\n                vscode.Uri.file(path.join(context.extensionPath, 'webview', 'dist'))\n            ]\n        };\n\n        // Load the React app\n        try {\n            const htmlContent = getWebviewContent(webviewPanel, context.extensionUri);\n            webviewPanel.webview.html = htmlContent;\n            console.log('Webview HTML content set successfully');\n        } catch (error) {\n            console.error('Failed to set webview HTML:', error);\n            vscode.window.showErrorMessage(`Failed to load webview: ${error instanceof Error ? error.message : 'Unknown error'}`);\n            return;\n        }\n\n        // Handle messages from the webview\n        webviewPanel.webview.onDidReceiveMessage(\n            async message => {\n                try {\n                    if (!message.endpoint) {\n                        throw new Error('No endpoint specified in message');\n                    }\n\n                    const url = new URL(`http://127.0.0.1:8000${message.endpoint}`);\n                    if (message.params) {\n                        Object.entries(message.params).forEach(([key, value]) => {\n                            if (value !== undefined && value !== null && value !== '') {\n                                url.searchParams.append(key, String(value));\n                            }\n                        });\n                    }\n\n                    console.log('Making request to:', url.toString());\n                    const response = await fetch(url.toString(), {\n                        method: 'GET',\n                        headers: {\n                            'Accept': 'application/json'\n                        }\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json().catch(() => null);\n                        throw new Error(errorData?.error || `HTTP error! status: ${response.status}`);\n                    }\n\n                    const data = await response.json();\n                    console.log('Received response:', data);\n                    webviewPanel?.webview.postMessage({ type: 'response', data });\n                } catch (error) {\n                    console.error('Error handling webview message:', error);\n                    webviewPanel?.webview.postMessage({\n                        type: 'error',\n                        error: error instanceof Error ? error.message : 'Unknown error occurred'\n                    });\n                }\n            },\n            undefined,\n            context.subscriptions\n        );\n\n        // Reset when the panel is disposed\n        webviewPanel.onDidDispose(\n            () => {\n                webviewPanel = undefined;\n            },\n            null,\n            context.subscriptions\n        );\n    });\n\n    context.subscriptions.push(disposable);\n}\n\nasync function startBackend(backendPath: string): Promise<void> {\n    const pythonPath = path.join(backendPath, '.venv', 'bin', 'python');\n    const appPath = path.join(backendPath, 'main.py');\n\n    console.log('Starting backend with:', {\n        backendPath,\n        pythonPath,\n        appPath\n    });\n\n    // Check prerequisites\n    if (!fs.existsSync(pythonPath)) {\n        throw new Error(`Python not found at ${pythonPath}. Make sure the virtual environment is set up.`);\n    }\n\n    if (!fs.existsSync(appPath)) {\n        throw new Error(`Backend app not found at ${appPath}`);\n    }\n\n    // Start the backend server\n    backendProcess = cp.spawn(pythonPath, ['-m', 'uvicorn', 'main:app', '--reload', '--port', '8000'], {\n        cwd: backendPath,\n        env: { \n            ...process.env, \n            PYTHONPATH: backendPath,\n            PATH: `${path.join(backendPath, '.venv', 'bin')}:${process.env.PATH}`\n        }\n    });\n\n    backendProcess.stdout?.on('data', (data) => {\n        console.log(`Backend stdout: ${data}`);\n    });\n\n    backendProcess.stderr?.on('data', (data) => {\n        console.error(`Backend stderr: ${data}`);\n    });\n\n    backendProcess.on('error', (error) => {\n        console.error('Failed to start backend:', error);\n        throw error;\n    });\n\n    backendProcess.on('exit', (code) => {\n        if (code !== 0) {\n            console.error(`Backend process exited with code ${code}`);\n            backendProcess = undefined;\n        }\n    });\n\n    // Wait for the server to start\n    await new Promise<void>((resolve, reject) => {\n        const timeout = setTimeout(() => {\n            reject(new Error('Backend server failed to start within 5 seconds'));\n        }, 5000);\n\n        backendProcess?.stdout?.on('data', (data) => {\n            const message = data.toString();\n            console.log('Backend stdout:', message);\n            if (message.includes('Application startup complete')) {\n                clearTimeout(timeout);\n                resolve();\n            }\n        });\n\n        backendProcess?.stderr?.on('data', (data) => {\n            const message = data.toString();\n            console.log('Backend stderr:', message);\n            if (message.includes('Application startup complete')) {\n                clearTimeout(timeout);\n                resolve();\n            }\n        });\n\n        backendProcess?.on('error', (error) => {\n            clearTimeout(timeout);\n            reject(error);\n        });\n    });\n}\n\n/**\n * Loads the webview HTML content and ensures the bundle.js path is correctly resolved\n * using VS Code's webview URI scheme.\n */\nfunction getWebviewContent(panel: vscode.WebviewPanel, extensionUri: vscode.Uri): string {\n    try {\n        // Log the extension path and webview paths\n        console.log('Extension URI:', extensionUri.fsPath);\n        const webviewDistPath = path.join(extensionUri.fsPath, 'webview', 'dist');\n        console.log('Webview dist path:', webviewDistPath);\n        \n        // Check if the dist directory exists\n        if (!fs.existsSync(webviewDistPath)) {\n            console.error('Webview dist directory not found at:', webviewDistPath);\n            return '<html><body><h1>Error: Webview dist directory not found</h1></body></html>';\n        }\n\n        // Check for index.html\n        const htmlPath = path.join(webviewDistPath, 'index.html');\n        console.log('Looking for index.html at:', htmlPath);\n        if (!fs.existsSync(htmlPath)) {\n            console.error('index.html not found at:', htmlPath);\n            return '<html><body><h1>Error: index.html not found</h1></body></html>';\n        }\n\n        // Read and log the HTML content\n        let htmlContent = fs.readFileSync(htmlPath, 'utf8');\n        console.log('Found index.html, content length:', htmlContent.length);\n        \n        // Get the URI for bundle.js\n        const bundlePath = path.join(webviewDistPath, 'bundle.js');\n        console.log('Looking for bundle.js at:', bundlePath);\n        if (!fs.existsSync(bundlePath)) {\n            console.error('bundle.js not found at:', bundlePath);\n            return '<html><body><h1>Error: bundle.js not found</h1></body></html>';\n        }\n\n        const bundleUri = panel.webview.asWebviewUri(\n            vscode.Uri.file(bundlePath)\n        );\n        console.log('Bundle URI:', bundleUri.toString());\n        \n        // Replace the script src with the webview URI\n        htmlContent = htmlContent.replace(\n            'src=\"bundle.js\"',\n            `src=\"${bundleUri}\"`\n        );\n        \n        console.log('Final HTML content:', htmlContent);\n        return htmlContent;\n    } catch (error) {\n        console.error('Error loading webview HTML:', error);\n        return `<html><body><h1>Error loading webview content: ${error instanceof Error ? error.message : 'Unknown error'}</h1></body></html>`;\n    }\n}\n\nexport function deactivate() {\n    if (backendProcess) {\n        backendProcess.kill();\n        backendProcess = undefined;\n    }\n} "],
  "mappings": "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",
  "names": []
}
